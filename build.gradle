apply plugin: 'com.android.library'
apply from: "native.gradle"

buildscript {
    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
    }
}

ext {
    androidMinSdkVersion = 21
    sqlcipherDir = "${projectDir}/sqlcipher"
    opensslDir = "${projectDir}/openssl"
    sqlcipherCFlags = "-DSQLITE_HAS_CODEC " +
            "-DSQLITE_SOUNDEX " +
            "-DHAVE_USLEEP=1 " +
            "-DSQLITE_MAX_VARIABLE_NUMBER=99999 " +
            "-DSQLITE_TEMP_STORE=3 " +
            "-DSQLITE_THREADSAFE=1 " +
            "-DSQLITE_DEFAULT_JOURNAL_SIZE_LIMIT=1048576 " +
            "-DNDEBUG=1 " +
            "-DSQLITE_ENABLE_MEMORY_MANAGEMENT=1 " +
            "-DSQLITE_ENABLE_LOAD_EXTENSION " +
            "-DSQLITE_ENABLE_COLUMN_METADATA " +
            "-DSQLITE_ENABLE_UNLOCK_NOTIFY " +
            "-DSQLITE_ENABLE_RTREE " +
            "-DSQLITE_ENABLE_STAT3 " +
            "-DSQLITE_ENABLE_STAT4 " +
            "-DSQLITE_ENABLE_JSON1 " +
            "-DSQLITE_ENABLE_FTS3_PARENTHESIS " +
            "-DSQLITE_ENABLE_FTS4 " +
            "-DSQLITE_ENABLE_FTS5 " +
            "-DSQLCIPHER_CRYPTO_OPENSSL"
}

android {
    repositories {
        jcenter()
    }

    compileSdkVersion 27
    buildToolsVersion '27.0.2'

    defaultConfig {
        minSdkVersion androidMinSdkVersion
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        consumerProguardFiles 'proguard-rules.txt'
    }

    sourceSets {
        main {
            jniLibs.srcDirs += 'libs'
        }
    }

    // See https://github.com/bytedeco/javacpp/blob/master/src/main/resources/org/bytedeco/javacpp/properties/ for defaults
    libraryVariants.all { variant ->
        variant.javaCompiler.doLast {
            println 'javacpp ' + variant.name
            def projectRoot = projectDir.getCanonicalPath()
            def ndkRoot = android.getNdkDirectory().getCanonicalPath()
            def cp = variant.javaCompiler.destinationDir.getCanonicalPath()
            def platform64Version = "android-${androidMinSdkVersion > 21 ? androidMinSdkVersion : 21}"
            def platformVersion = "android-${androidMinSdkVersion}"

            buildSQLiteTask(cp, ndkRoot, projectRoot, platformVersion, 'arm', 'arm-linux-androideabi', 'arm-linux-androideabi', '-march=armv5te -mtune=xscale -msoft-float -funswitch-loops -finline-limit=300 -O3 -s', 'armeabi')
            buildSQLiteTask(cp, ndkRoot, projectRoot, platformVersion, 'arm', 'arm-linux-androideabi', 'arm-linux-androideabi', '-march=armv7-a -mfloat-abi=softfp -mfpu=neon -ffast-math -Wl,--fix-cortex-a8', 'armeabi-v7a')
            buildSQLiteTask(cp, ndkRoot, projectRoot, platform64Version, 'arm64', 'aarch64-linux-android', 'aarch64-linux-android', '-funswitch-loops -finline-limit=300 -O3 -s', 'arm64-v8a')
            buildSQLiteTask(cp, ndkRoot, projectRoot, platformVersion, 'x86', 'x86', 'i686-linux-android', '-funswitch-loops -finline-limit=300 -O3 -s', 'x86')
            buildSQLiteTask(cp, ndkRoot, projectRoot, platform64Version, 'x86_64', 'x86_64', 'x86_64-linux-android', '-funswitch-loops -finline-limit=300 -O3 -s', 'x86_64')
            println 'javacpp done'
        }
    }
}

configurations {
    javacpp
}

def buildSQLiteTask(cp, ndkRoot, projectRoot, platformVersion, androidArchitecture, compilerArchitecture, compilerPrefix, flags, outputArchitecture) {
    javaexec {
        main 'org.bytedeco.javacpp.tools.Builder'
        classpath configurations.javacpp
        args '-cp', cp,
                '-properties', "android-${androidArchitecture}",
                '-Dplatform.root=' + ndkRoot,
                "-Dplatform.sysroot=platforms/${platformVersion}/arch-${androidArchitecture}",
                "-Dplatform.compiler.default=${flags} ${sqlcipherCFlags}",
                '-Dplatform.compiler=toolchains/' + compilerArchitecture + '-4.9/prebuilt/darwin-x86_64/bin/' + compilerPrefix + '-g++',
                '-Dplatform.includepath=sources/cxx-stl/gnu-libstdc++/4.9/include:sources/cxx-stl/gnu-libstdc++/4.9/libs/' + outputArchitecture + '/include:' + "sysroot/usr/include:sysroot/usr/include/${compilerPrefix}:" + projectRoot + '/android-database-sqlcipher/android-database-sqlcipher/src/main/cpp:' + projectRoot + '/android-database-sqlcipher/android-database-sqlcipher/src/main/external/sqlcipher:' + projectRoot + '/rapidjson/include:' + projectRoot + '/sqlite-rapidjson',
                '-Dplatform.linkpath=sources/cxx-stl/gnu-libstdc++/4.9/libs/' + outputArchitecture + ':' + projectRoot + '/libs/' + outputArchitecture,
                '-d', projectRoot + '/libs/' + outputArchitecture,
                'com.hotwirestudios.sqlite.driver.SQLiteNative'
    }
}

dependencies {
    implementation 'org.bytedeco:javacpp:1.3.3'
    javacpp 'org.bytedeco:javacpp:1.3.3'
    implementation 'com.android.support:support-annotations:27.0.2'
    implementation 'com.parse.bolts:bolts-tasks:1.4.0'
}

repositories {
    google()
}
